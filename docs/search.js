window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "common", "modulename": "common", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.block", "modulename": "common.block", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader", "modulename": "common.block", "qualname": "BlockHeader", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.__init__", "modulename": "common.block", "qualname": "BlockHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">previous_block_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">current_PoH_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">current_PoH_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">previous_PoH_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timestamp</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">noonce</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">merkle_root</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">slot</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">leader_node_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "common.block.BlockHeader.previous_block_hash", "modulename": "common.block", "qualname": "BlockHeader.previous_block_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.current_PoH_hash", "modulename": "common.block", "qualname": "BlockHeader.current_PoH_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.current_PoH_timestamp", "modulename": "common.block", "qualname": "BlockHeader.current_PoH_timestamp", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.previous_PoH_hash", "modulename": "common.block", "qualname": "BlockHeader.previous_PoH_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.merkle_root", "modulename": "common.block", "qualname": "BlockHeader.merkle_root", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.timestamp", "modulename": "common.block", "qualname": "BlockHeader.timestamp", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.noonce", "modulename": "common.block", "qualname": "BlockHeader.noonce", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.slot", "modulename": "common.block", "qualname": "BlockHeader.slot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.leader_node_public_key_hash", "modulename": "common.block", "qualname": "BlockHeader.leader_node_public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.hash", "modulename": "common.block", "qualname": "BlockHeader.hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockHeader.get_hash", "modulename": "common.block", "qualname": "BlockHeader.get_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.BlockHeader.to_dict", "modulename": "common.block", "qualname": "BlockHeader.to_dict", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "common.block.BlockHeader.to_json", "modulename": "common.block", "qualname": "BlockHeader.to_json", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "common.block.BlockPoH", "modulename": "common.block", "qualname": "BlockPoH", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockPoH.__init__", "modulename": "common.block", "qualname": "BlockPoH.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">PoH_registry_input_data</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry_intermediary</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "common.block.BlockPoH.PoH_registry_input_data", "modulename": "common.block", "qualname": "BlockPoH.PoH_registry_input_data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockPoH.PoH_registry_intermediary", "modulename": "common.block", "qualname": "BlockPoH.PoH_registry_intermediary", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.BlockPoH.to_dict", "modulename": "common.block", "qualname": "BlockPoH.to_dict", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "common.block.Block", "modulename": "common.block", "qualname": "Block", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.__init__", "modulename": "common.block", "qualname": "Block.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\ttransactions: [&lt;class &#x27;dict&#x27;&gt;],</span><span class=\"param\">\t<span class=\"n\">block_header</span><span class=\"p\">:</span> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">BlockHeader</span>,</span><span class=\"param\">\t<span class=\"n\">block_PoH</span><span class=\"p\">:</span> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">BlockPoH</span>,</span><span class=\"param\">\t<span class=\"n\">previous_block</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">block_signature</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.block.Block.block_header", "modulename": "common.block", "qualname": "Block.block_header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.block_PoH", "modulename": "common.block", "qualname": "Block.block_PoH", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.block_signature", "modulename": "common.block", "qualname": "Block.block_signature", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.transactions", "modulename": "common.block", "qualname": "Block.transactions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.previous_block", "modulename": "common.block", "qualname": "Block.previous_block", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.master_state", "modulename": "common.block", "qualname": "Block.master_state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.to_dict", "modulename": "common.block", "qualname": "Block.to_dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.to_json", "modulename": "common.block", "qualname": "Block.to_json", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "common.block.Block.data", "modulename": "common.block", "qualname": "Block.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.block.Block.signature_data", "modulename": "common.block", "qualname": "Block.signature_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.signature_hash", "modulename": "common.block", "qualname": "Block.signature_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.sign_block", "modulename": "common.block", "qualname": "Block.sign_block", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">owner</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_transaction", "modulename": "common.block", "qualname": "Block.get_transaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction_hash</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_user_utxos_raw", "modulename": "common.block", "qualname": "Block.get_user_utxos_raw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_user_all_utxos", "modulename": "common.block", "qualname": "Block.get_user_all_utxos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_user_utxos", "modulename": "common.block", "qualname": "Block.get_user_utxos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_smart_contract_api", "modulename": "common.block", "qualname": "Block.get_smart_contract_api", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">account</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_user_utxos_balance", "modulename": "common.block", "qualname": "Block.get_user_utxos_balance", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_user_utxos_account_temp", "modulename": "common.block", "qualname": "Block.get_user_utxos_account_temp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_transaction_from_utxo", "modulename": "common.block", "qualname": "Block.get_transaction_from_utxo", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_unlocking_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_index</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_transaction_from_utxo_old", "modulename": "common.block", "qualname": "Block.get_transaction_from_utxo_old", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_unlocking_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_index</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_locking_script_from_utxo_new", "modulename": "common.block", "qualname": "Block.get_locking_script_from_utxo_new", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">utxo_unlocking_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">utxo_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_locking_script_from_utxo", "modulename": "common.block", "qualname": "Block.get_locking_script_from_utxo", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_unlocking_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">utxo_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_followup_step4_pin", "modulename": "common.block", "qualname": "Block.get_followup_step4_pin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_public_key_hash</span>, </span><span class=\"param\"><span class=\"n\">payment_ref</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_marketplace_step", "modulename": "common.block", "qualname": "Block.get_marketplace_step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">marketplace_step</span>, </span><span class=\"param\"><span class=\"n\">user_public_key_hash</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_marketplace_step_raw", "modulename": "common.block", "qualname": "Block.get_marketplace_step_raw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">marketplace_step_raw</span>, </span><span class=\"param\"><span class=\"n\">user_public_key_hash</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.block.Block.get_marketplace_genesis", "modulename": "common.block", "qualname": "Block.get_marketplace_genesis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.consensus_blockchain", "modulename": "common.consensus_blockchain", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.block_list", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.block_list", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.final_block_list", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.final_block_list", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.final_chain_list", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.final_chain_list", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.best_block", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.best_block", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.backlog_storage_sharding", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.backlog_storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.backlog_chain_list", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.backlog_chain_list", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.backlog_chain_list_counter", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.backlog_chain_list_counter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.block_to_reject_now_by_leader_node", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.block_to_reject_now_by_leader_node", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.calculate_chain_vote", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.calculate_chain_vote", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slef</span>, </span><span class=\"param\"><span class=\"n\">consensus_block</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.retrieve_blockchain_PoH", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.retrieve_blockchain_PoH", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slef</span>, </span><span class=\"param\"><span class=\"n\">consensus_block</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.consensus_blockchain.ConcensusBlockChain.refresh", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlockChain.refresh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.consensus_blockchain.ConcensusBlock", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlock", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlock.__init__", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlock.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">block</span></span>)</span>"}, {"fullname": "common.consensus_blockchain.ConcensusBlock.previous_concensus_block", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlock.previous_concensus_block", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlock.current_concensus_block", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlock.current_concensus_block", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.ConcensusBlock.next_concensus_block", "modulename": "common.consensus_blockchain", "qualname": "ConcensusBlock.next_concensus_block", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.consensus_blockchain.consensus_blockchain", "modulename": "common.consensus_blockchain", "qualname": "consensus_blockchain", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.consensus_blockchain.ConcensusBlockChain object&gt;"}, {"fullname": "common.initialize_default_blockchain", "modulename": "common.initialize_default_blockchain", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.initialize_default_blockchain.albert_wallet", "modulename": "common.initialize_default_blockchain", "qualname": "albert_wallet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.owner.Owner object&gt;"}, {"fullname": "common.initialize_default_blockchain.bertrand_wallet", "modulename": "common.initialize_default_blockchain", "qualname": "bertrand_wallet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.owner.Owner object&gt;"}, {"fullname": "common.initialize_default_blockchain.camille_wallet", "modulename": "common.initialize_default_blockchain", "qualname": "camille_wallet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.owner.Owner object&gt;"}, {"fullname": "common.initialize_default_blockchain.marketplace_wallet", "modulename": "common.initialize_default_blockchain", "qualname": "marketplace_wallet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.owner.Owner object&gt;"}, {"fullname": "common.initialize_default_blockchain.initialize_default_blockchain", "modulename": "common.initialize_default_blockchain", "qualname": "initialize_default_blockchain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">blockchain_memory</span><span class=\"p\">:</span> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">io_blockchain</span><span class=\"o\">.</span><span class=\"n\">BlockchainMemory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain", "modulename": "common.io_blockchain", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.__init__", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.io_blockchain.BlockchainMemory.file_name", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.file_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.master_state", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.master_state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.storage_sharding", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.backlog_storage_sharding", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.backlog_storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.slashed_storage_sharding", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.slashed_storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.backlog_flag", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.backlog_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.STORAGE_DIR", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.STORAGE_DIR", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.NEW_BLOCKCHAIN_DIR_BACKLOG", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.NEW_BLOCKCHAIN_DIR_BACKLOG", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_blockchain.BlockchainMemory.setup_backlog_directory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.setup_backlog_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.get_blockchain_from_memory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.get_blockchain_from_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.get_best_block_pointer_in_backlog", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.get_best_block_pointer_in_backlog", "kind": "function", "doc": "<p>this function is identifying the best last block in the Backlog</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.get_all_blockchain_from_memory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.get_all_blockchain_from_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.store_block_in_blockchain_in_backlog", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.store_block_in_blockchain_in_backlog", "kind": "function", "doc": "<p>store the block in a file in blockchain_backlog folder</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_block</span>, </span><span class=\"param\"><span class=\"n\">master_state_readiness</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.store_block_in_blockchain_in_slashed", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.store_block_in_blockchain_in_slashed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_block</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.store_block_in_blockchain_in_memory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.store_block_in_blockchain_in_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_block</span>, </span><span class=\"param\"><span class=\"n\">latest_received_block</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_blockchain.BlockchainMemory.store_blockchain_dict_in_memory", "modulename": "common.io_blockchain", "qualname": "BlockchainMemory.store_blockchain_dict_in_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blockchain_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_known_nodes", "modulename": "common.io_known_nodes", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.io_known_nodes.KnownNodesMemory", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.known_nodes_file", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.known_nodes_file", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.store_known_nodes", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.store_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">known_nodes</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.known_nodes", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.known_nodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": [&lt;class &#x27;common.node.Node&#x27;&gt;]"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.store_new_node", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.store_new_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_node</span><span class=\"p\">:</span> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.store_nodes", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.store_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\">nodes: [&lt;class &#x27;common.node.Node&#x27;&gt;]</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_known_nodes.KnownNodesMemory.return_known_nodes", "modulename": "common.io_known_nodes", "qualname": "KnownNodesMemory.return_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule", "modulename": "common.io_leader_node_schedule", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.leader_node_schedule_file", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.leader_node_schedule_file", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.leader_node_schedule", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.leader_node_schedule", "kind": "variable", "doc": "<p></p>\n", "annotation": ": [&lt;class &#x27;common.node.Node&#x27;&gt;]"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.leader_node_schedule_json", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.leader_node_schedule_json", "kind": "variable", "doc": "<p></p>\n", "annotation": ": [&lt;class &#x27;common.node.Node&#x27;&gt;]"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.leader_nodes", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.leader_nodes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": [&lt;class &#x27;common.node.Node&#x27;&gt;]"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.current_leader_node_url", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.current_leader_node_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.current_leader_node_slot", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.current_leader_node_slot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.current_leader_node_public_key_hash", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.current_leader_node_public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.store_new_leader_node_schedule", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.store_new_leader_node_schedule", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leader_node_schedule_raw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.store_new_leader_node_schedule_json", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.store_new_leader_node_schedule_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leader_node_schedule_json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.create_leader_node_schedule", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.create_leader_node_schedule", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">known_nodes_of_known_node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.create_LeaderNodeList", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.create_LeaderNodeList", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">epoc_dic</span>, </span><span class=\"param\"><span class=\"n\">known_nodes_of_known_node</span>, </span><span class=\"param\"><span class=\"n\">epoch_number</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.next_leader_node_schedule", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.next_leader_node_schedule", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">known_nodes_of_known_node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.add_new_leader_node_schedule", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.add_new_leader_node_schedule", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leader_node_schedule</span>, </span><span class=\"param\"><span class=\"n\">known_nodes_of_known_node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.get_leader_node_public_key_hash", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.get_leader_node_public_key_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_leader_node_schedule.LeaderNodeScheduleMemory.process_smart_contract", "modulename": "common.io_leader_node_schedule", "qualname": "LeaderNodeScheduleMemory.process_smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node_network_account</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_transaction_hash</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_mem_pool", "modulename": "common.io_mem_pool", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.io_mem_pool.MemPool", "modulename": "common.io_mem_pool", "qualname": "MemPool", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.io_mem_pool.MemPool.mempool_file_name", "modulename": "common.io_mem_pool", "qualname": "MemPool.mempool_file_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_mem_pool.MemPool.get_transactions_from_memory", "modulename": "common.io_mem_pool", "qualname": "MemPool.get_transactions_from_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.io_mem_pool.MemPool.store_transactions_in_memory", "modulename": "common.io_mem_pool", "qualname": "MemPool.store_transactions_in_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_mem_pool.MemPool.clear_transactions_from_memory", "modulename": "common.io_mem_pool", "qualname": "MemPool.clear_transactions_from_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding", "modulename": "common.io_storage_sharding", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding.__init__", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">storage_directory</span>, </span><span class=\"param\"><span class=\"n\">deepth</span></span>)</span>"}, {"fullname": "common.io_storage_sharding.StorageSharding.storage_directory", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.storage_directory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding.deepth", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.deepth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding.directory", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.directory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding.filename", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.filename", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.io_storage_sharding.StorageSharding.get_directory", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.get_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_2_store</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.get_filename", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.get_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_2_store</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.read", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_2_store</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.store", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.store", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_2_store</span>, </span><span class=\"param\"><span class=\"n\">data_2_store</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.delete", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_2_store</span>, </span><span class=\"param\"><span class=\"n\">master_state_readiness</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.setup_directory", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.setup_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.store_file", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.store_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data_2_store</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.io_storage_sharding.StorageSharding.delete_file", "modulename": "common.io_storage_sharding", "qualname": "StorageSharding.delete_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.maintenance", "modulename": "common.maintenance", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.maintenance.Maintenance", "modulename": "common.maintenance", "qualname": "Maintenance", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.maintenance.Maintenance.__init__", "modulename": "common.maintenance", "qualname": "Maintenance.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.maintenance.Maintenance.maintenance_mode", "modulename": "common.maintenance", "qualname": "Maintenance.maintenance_mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.maintenance.Maintenance.get_mode", "modulename": "common.maintenance", "qualname": "Maintenance.get_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.maintenance.Maintenance.switch_on", "modulename": "common.maintenance", "qualname": "Maintenance.switch_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.maintenance.Maintenance.switch_off", "modulename": "common.maintenance", "qualname": "Maintenance.switch_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.maintenance.maintenance_mode", "modulename": "common.maintenance", "qualname": "maintenance_mode", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.maintenance.Maintenance object&gt;"}, {"fullname": "common.master_state", "modulename": "common.master_state", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState", "modulename": "common.master_state", "qualname": "MasterState", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.__init__", "modulename": "common.master_state", "qualname": "MasterState.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.master_state.MasterState.current_master_state", "modulename": "common.master_state", "qualname": "MasterState.current_master_state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.temporary_save_flag", "modulename": "common.master_state", "qualname": "MasterState.temporary_save_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.advance_save_flag", "modulename": "common.master_state", "qualname": "MasterState.advance_save_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.store_block_in_blockchain_in_memory_flag", "modulename": "common.master_state", "qualname": "MasterState.store_block_in_blockchain_in_memory_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.storage_sharding", "modulename": "common.master_state", "qualname": "MasterState.storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.temporary_storage_sharding", "modulename": "common.master_state", "qualname": "MasterState.temporary_storage_sharding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state.MasterState.get_master_state_from_memory_from_transaction", "modulename": "common.master_state", "qualname": "MasterState.get_master_state_from_memory_from_transaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.get_account_list_transaction", "modulename": "common.master_state", "qualname": "MasterState.get_account_list_transaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transactions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.get_master_state_from_memory_from_user", "modulename": "common.master_state", "qualname": "MasterState.get_master_state_from_memory_from_user", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.get_master_state_from_memory_from_account_list", "modulename": "common.master_state", "qualname": "MasterState.get_master_state_from_memory_from_account_list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">account_list</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.update_master_state_memory", "modulename": "common.master_state", "qualname": "MasterState.update_master_state_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">account</span>, </span><span class=\"param\"><span class=\"n\">file_master_state_raw</span>, </span><span class=\"param\"><span class=\"n\">block_PoH</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.update_master_state", "modulename": "common.master_state", "qualname": "MasterState.update_master_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">block_PoH</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.update_old_utxo_key", "modulename": "common.master_state", "qualname": "MasterState.update_old_utxo_key", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">old_utxo_account</span>,</span><span class=\"param\">\t<span class=\"n\">old_utxo_key</span>,</span><span class=\"param\">\t<span class=\"n\">new_utxo_key</span>,</span><span class=\"param\">\t<span class=\"n\">new_utxo_value_output</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.store_master_state_in_memory", "modulename": "common.master_state", "qualname": "MasterState.store_master_state_in_memory", "kind": "function", "doc": "<p>to store the transaction in a file =&gt;store_master_state_in_memory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">BlockPoH</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.delete_TempBlockPoH", "modulename": "common.master_state", "qualname": "MasterState.delete_TempBlockPoH", "kind": "function", "doc": "<p>to delete TempBlockPoH associated to the Transaction \nat the end of the block creation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.clean_temporary_file_master_state", "modulename": "common.master_state", "qualname": "MasterState.clean_temporary_file_master_state", "kind": "function", "doc": "<p>to delete the transaction in the temporary_file_master</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction</span>, </span><span class=\"param\"><span class=\"n\">BlockPoH</span>, </span><span class=\"param\"><span class=\"n\">master_state_readiness</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.extract_account_list_from_locking_script", "modulename": "common.master_state", "qualname": "MasterState.extract_account_list_from_locking_script", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">op_elem</span>, </span><span class=\"param\"><span class=\"n\">utxo</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state.MasterState.extract_account_list_from_unlocking_public_key_hash", "modulename": "common.master_state", "qualname": "MasterState.extract_account_list_from_unlocking_public_key_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">utxo_account</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_readiness", "modulename": "common.master_state_readiness", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.master_state_readiness.MasterStateReadiness", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness", "kind": "class", "doc": "<p>Object to ensure that MasterState is not udpate at the same time by 2 tasks</p>\n"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.__init__", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.readiness_flag", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.readiness_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.start_time", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.start_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.start_flag", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.start_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.block", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.block", "kind": "function", "doc": "<p>to ensure that MasterState is not udpated at the same time by 2 tasks\nReturn true if MasterState is free\nOtherwise False</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_readiness.MasterStateReadiness.release", "modulename": "common.master_state_readiness", "qualname": "MasterStateReadiness.release", "kind": "function", "doc": "<p>Reset to avoid blocking MasterState</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_readiness.master_state_readiness", "modulename": "common.master_state_readiness", "qualname": "master_state_readiness", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.master_state_readiness.MasterStateReadiness object&gt;"}, {"fullname": "common.master_state_threading", "modulename": "common.master_state_threading", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.master_state_threading.MasterStateThreading", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.master_state_threading.MasterStateThreading.__init__", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_readiness_flag", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_readiness_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_status", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_start_time", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_start_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.master_state_threading.MasterStateThreading.get_receiving_status", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.get_receiving_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_block", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_block", "kind": "function", "doc": "<p>to ensure that a block will be not created \nduring the receiving of Block</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_akn", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_akn", "kind": "function", "doc": "<p>to aknowledge the block receiving \nand to launch the purge of the backlog \nand the block creation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_threading.MasterStateThreading.receiving_reset", "modulename": "common.master_state_threading", "qualname": "MasterStateThreading.receiving_reset", "kind": "function", "doc": "<p>to to avoid blocking MasterStateThreading</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.master_state_threading.master_state_threading", "modulename": "common.master_state_threading", "qualname": "master_state_threading", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.master_state_threading.MasterStateThreading object&gt;"}, {"fullname": "common.merkle_tree", "modulename": "common.merkle_tree", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.merkle_tree.Node", "modulename": "common.merkle_tree", "qualname": "Node", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.merkle_tree.Node.__init__", "modulename": "common.merkle_tree", "qualname": "Node.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">left_child</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">right_child</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "common.merkle_tree.Node.value", "modulename": "common.merkle_tree", "qualname": "Node.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.merkle_tree.Node.left_child", "modulename": "common.merkle_tree", "qualname": "Node.left_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.merkle_tree.Node.right_child", "modulename": "common.merkle_tree", "qualname": "Node.right_child", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.merkle_tree.compute_tree_depth", "modulename": "common.merkle_tree", "qualname": "compute_tree_depth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number_of_leaves</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.merkle_tree.is_power_of_2", "modulename": "common.merkle_tree", "qualname": "is_power_of_2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">number_of_leaves</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.merkle_tree.fill_set", "modulename": "common.merkle_tree", "qualname": "fill_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">list_of_nodes</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.merkle_tree.build_merkle_tree", "modulename": "common.merkle_tree", "qualname": "build_merkle_tree", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\">node_data: [&lt;class &#x27;str&#x27;&gt;]</span><span class=\"return-annotation\">) -> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">merkle_tree</span><span class=\"o\">.</span><span class=\"n\">Node</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.merkle_tree.get_merkle_root", "modulename": "common.merkle_tree", "qualname": "get_merkle_root", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transactions</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.network", "modulename": "common.network", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.network.Network", "modulename": "common.network", "qualname": "Network", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.__init__", "modulename": "common.network", "qualname": "Network.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span>, </span><span class=\"param\"><span class=\"n\">init_known_nodes_file</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "common.network.Network.FIRST_KNOWN_NODE_HOSTNAME_LIST", "modulename": "common.network", "qualname": "Network.FIRST_KNOWN_NODE_HOSTNAME_LIST", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.node", "modulename": "common.network", "qualname": "Network.node", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.blockchain_memory", "modulename": "common.network", "qualname": "Network.blockchain_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.known_nodes_memory", "modulename": "common.network", "qualname": "Network.known_nodes_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.leader_node_schedule_memory", "modulename": "common.network", "qualname": "Network.leader_node_schedule_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.node_network_account", "modulename": "common.network", "qualname": "Network.node_network_account", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.init_known_nodes_file_flag", "modulename": "common.network", "qualname": "Network.init_known_nodes_file_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.network.Network.initialize_known_nodes_file", "modulename": "common.network", "qualname": "Network.initialize_known_nodes_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.advertise_to_all_known_nodes", "modulename": "common.network", "qualname": "Network.advertise_to_all_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.advertise_leader_node_schedule_to_all_known_nodes", "modulename": "common.network", "qualname": "Network.advertise_leader_node_schedule_to_all_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.advertise_to_default_node", "modulename": "common.network", "qualname": "Network.advertise_to_default_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.ask_known_nodes_for_their_known_nodes", "modulename": "common.network", "qualname": "Network.ask_known_nodes_for_their_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.initialize_blockchain", "modulename": "common.network", "qualname": "Network.initialize_blockchain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.get_longest_blockchain", "modulename": "common.network", "qualname": "Network.get_longest_blockchain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.join_network", "modulename": "common.network", "qualname": "Network.join_network", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.network.Network.return_known_nodes", "modulename": "common.network", "qualname": "Network.return_known_nodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"p\">[]</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.new_user_creation", "modulename": "common.new_user_creation", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.new_user_creation.owner", "modulename": "common.new_user_creation", "qualname": "owner", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;common.owner.Owner object&gt;"}, {"fullname": "common.node", "modulename": "common.node", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.node.Node", "modulename": "common.node", "qualname": "Node", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.node.Node.__init__", "modulename": "common.node", "qualname": "Node.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hostname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "common.node.Node.hostname", "modulename": "common.node", "qualname": "Node.hostname", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.node.Node.base_url", "modulename": "common.node", "qualname": "Node.base_url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.node.Node.dict", "modulename": "common.node", "qualname": "Node.dict", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.node.Node.post", "modulename": "common.node", "qualname": "Node.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.get", "modulename": "common.node", "qualname": "Node.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.advertise", "modulename": "common.node", "qualname": "Node.advertise", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">hostname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.advertise_leader_node_schedule", "modulename": "common.node", "qualname": "Node.advertise_leader_node_schedule", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leader_node_schedule</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.known_node_request", "modulename": "common.node", "qualname": "Node.known_node_request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.send_new_block", "modulename": "common.node", "qualname": "Node.send_new_block", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.saving_new_block_leader_node", "modulename": "common.node", "qualname": "Node.saving_new_block_leader_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.send_transaction", "modulename": "common.node", "qualname": "Node.send_transaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction_data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.send_transaction_to_leader_node", "modulename": "common.node", "qualname": "Node.send_transaction_to_leader_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction_data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.send_transaction_to_leader_node_advance", "modulename": "common.node", "qualname": "Node.send_transaction_to_leader_node_advance", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transaction_data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.get_blockchain", "modulename": "common.node", "qualname": "Node.get_blockchain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.restart", "modulename": "common.node", "qualname": "Node.restart", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.restart_request", "modulename": "common.node", "qualname": "Node.restart_request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.restart_join", "modulename": "common.node", "qualname": "Node.restart_join", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.network_maintenance_on", "modulename": "common.node", "qualname": "Node.network_maintenance_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.network_maintenance_off", "modulename": "common.node", "qualname": "Node.network_maintenance_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.get_smart_contract_api", "modulename": "common.node", "qualname": "Node.get_smart_contract_api", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">account</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.node.Node.smart_contract", "modulename": "common.node", "qualname": "Node.smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_data</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"nb\">property</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.owner", "modulename": "common.owner", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.owner.Owner", "modulename": "common.owner", "qualname": "Owner", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.owner.Owner.__init__", "modulename": "common.owner", "qualname": "Owner.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">private_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.owner.Owner.public_key_hex", "modulename": "common.owner", "qualname": "Owner.public_key_hex", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.owner.Owner.public_key_hash", "modulename": "common.owner", "qualname": "Owner.public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.owner.Owner.smart_contract", "modulename": "common.owner", "qualname": "Owner.smart_contract", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history", "modulename": "common.proof_of_history", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.__init__", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.proof_of_history.ProofOfHistory.PoW_memory", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.PoW_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.PoH_DURATION_SEC", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.PoH_DURATION_SEC", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.PoH_start_flag", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.PoH_start_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.wip_flag", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.wip_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.wip_flag_processing", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.wip_flag_processing", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.proof_of_history.ProofOfHistory.reset", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">previous_previous_PoH_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">previous_PoH_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">previous_PoH_timestamp</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.launch_PoH", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.launch_PoH", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.log_in_registry", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.log_in_registry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_data</span>, </span><span class=\"param\"><span class=\"n\">input_data_counter</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.log_in_registry_input_data", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.log_in_registry_input_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_data</span>, </span><span class=\"param\"><span class=\"n\">input_data_counter</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.PoHloop", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.PoHloop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.wip", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.wip", "kind": "function", "doc": "<p>this function is purging the backlog once a new block is received or 3 sec before termination</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.check_termination", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.check_termination", "kind": "function", "doc": "<p>this function is checking if the PoH is ended</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.increment_PoH", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.increment_PoH", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.input", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.input", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">input_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.create_PoH_registry_last", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.create_PoH_registry_last", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.create_PoH_registry_intermediary", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.create_PoH_registry_intermediary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.stop", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.stop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry_intermediary</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.get_validation_status", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.get_validation_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate_PoH_registry", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate_PoH_registry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate_PoH_registry_intermediary", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate_PoH_registry_intermediary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry_intermediary</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate_PoH_registry_entry", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate_PoH_registry_entry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate_PoH_registry_intermediary_entry", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate_PoH_registry_intermediary_entry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry_intermediary_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.proof_of_history.ProofOfHistory.validate_PoH_input_data_counter", "modulename": "common.proof_of_history", "qualname": "ProofOfHistory.validate_PoH_input_data_counter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">PoH_registry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract", "modulename": "common.smart_contract", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.smart_contract_memory_full", "modulename": "common.smart_contract", "qualname": "smart_contract_memory_full", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "common.smart_contract.check_smart_contract", "modulename": "common.smart_contract", "qualname": "check_smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transaction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.check_double_contract", "modulename": "common.smart_contract", "qualname": "check_double_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transaction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract", "modulename": "common.smart_contract", "qualname": "SmartContract", "kind": "class", "doc": "<p>A class used to manage the SmartContract execution</p>\n\n<p>...</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>smart_contract_account : str</p>\n\n<pre><code>* the hash string of the smart_contract to manage\n</code></pre>\n\n<p>smart_contract_type : str</p>\n\n<pre><code>* api : for read only\n\n* source : for writing the smart_contrat on the blockchain\n</code></pre>\n\n<h2 id=\"methods\">Methods</h2>\n\n<p>process() :</p>\n\n<pre><code>* launch the execution of the smart_contrat based on smart_contract_type\n</code></pre>\n"}, {"fullname": "common.smart_contract.SmartContract.__init__", "modulename": "common.smart_contract", "qualname": "SmartContract.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">smart_contract_account</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_sender", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_sender", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.gas", "modulename": "common.smart_contract", "qualname": "SmartContract.gas", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_type", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.payload", "modulename": "common.smart_contract", "qualname": "SmartContract.payload", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_account", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_account", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_new", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_new", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.result", "modulename": "common.smart_contract", "qualname": "SmartContract.result", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_memory_size", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_memory_size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_memory", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_memory_init", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_memory_init", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.memory_obj_2_load", "modulename": "common.smart_contract", "qualname": "SmartContract.memory_obj_2_load", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.cpu", "modulename": "common.smart_contract", "qualname": "SmartContract.cpu", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.sizeof", "modulename": "common.smart_contract", "qualname": "SmartContract.sizeof", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.code_source", "modulename": "common.smart_contract", "qualname": "SmartContract.code_source", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.gas_price_cpu_per_sec", "modulename": "common.smart_contract", "qualname": "SmartContract.gas_price_cpu_per_sec", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.gas_price_memory", "modulename": "common.smart_contract", "qualname": "SmartContract.gas_price_memory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.gas_ok_flag", "modulename": "common.smart_contract", "qualname": "SmartContract.gas_ok_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.error_flag", "modulename": "common.smart_contract", "qualname": "SmartContract.error_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.error_code", "modulename": "common.smart_contract", "qualname": "SmartContract.error_code", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_previous_transaction", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_previous_transaction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.smart_contract_transaction_hash", "modulename": "common.smart_contract", "qualname": "SmartContract.smart_contract_transaction_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.leader_node_flag", "modulename": "common.smart_contract", "qualname": "SmartContract.leader_node_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.block_PoH", "modulename": "common.smart_contract", "qualname": "SmartContract.block_PoH", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.NIGthreading_flag", "modulename": "common.smart_contract", "qualname": "SmartContract.NIGthreading_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.preloaded_code", "modulename": "common.smart_contract", "qualname": "SmartContract.preloaded_code", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.api_readonly_flag", "modulename": "common.smart_contract", "qualname": "SmartContract.api_readonly_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.SmartContract.check_1st_payload_parameters", "modulename": "common.smart_contract", "qualname": "SmartContract.check_1st_payload_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">payload</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.load_memory_obj_2_load", "modulename": "common.smart_contract", "qualname": "SmartContract.load_memory_obj_2_load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.load_code_source", "modulename": "common.smart_contract", "qualname": "SmartContract.load_code_source", "kind": "function", "doc": "<p>Load the code source of the SmartContract in the self.code_source</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.load_gas", "modulename": "common.smart_contract", "qualname": "SmartContract.load_gas", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.run_source", "modulename": "common.smart_contract", "qualname": "SmartContract.run_source", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_source</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.run_api", "modulename": "common.smart_contract", "qualname": "SmartContract.run_api", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.raise_not_enough_gas", "modulename": "common.smart_contract", "qualname": "SmartContract.raise_not_enough_gas", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.process", "modulename": "common.smart_contract", "qualname": "SmartContract.process", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.run_smart_contract", "modulename": "common.smart_contract", "qualname": "SmartContract.run_smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.clean_memory", "modulename": "common.smart_contract", "qualname": "SmartContract.clean_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.SmartContract.burn_gas", "modulename": "common.smart_contract", "qualname": "SmartContract.burn_gas", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.Memory", "modulename": "common.smart_contract", "qualname": "Memory", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.Memory.__init__", "modulename": "common.smart_contract", "qualname": "Memory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module_name</span></span>)</span>"}, {"fullname": "common.smart_contract.Memory.set_memory_process", "modulename": "common.smart_contract", "qualname": "Memory.set_memory_process", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj_list_init</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_memory_init</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.Memory.get_smart_contract_memory_init_attribut_value", "modulename": "common.smart_contract", "qualname": "Memory.get_smart_contract_memory_init_attribut_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj_name</span>, </span><span class=\"param\"><span class=\"n\">attribut</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_memory_init</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.MemoryList", "modulename": "common.smart_contract", "qualname": "MemoryList", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.MemoryList.__init__", "modulename": "common.smart_contract", "qualname": "MemoryList.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module_name</span></span>)</span>"}, {"fullname": "common.smart_contract.MemoryList.module_name", "modulename": "common.smart_contract", "qualname": "MemoryList.module_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.MemoryList.obj_name_check", "modulename": "common.smart_contract", "qualname": "MemoryList.obj_name_check", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.MemoryList.memory_obj_list", "modulename": "common.smart_contract", "qualname": "MemoryList.memory_obj_list", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract.MemoryList.get_memory_obj_list", "modulename": "common.smart_contract", "qualname": "MemoryList.get_memory_obj_list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_memory_init</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.MemoryList.add", "modulename": "common.smart_contract", "qualname": "MemoryList.add", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.GET_SELLER_SAFETY_COEF", "modulename": "common.smart_contract", "qualname": "GET_SELLER_SAFETY_COEF", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.CONVERT_2_NIG", "modulename": "common.smart_contract", "qualname": "CONVERT_2_NIG", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">requested_amount</span>, </span><span class=\"param\"><span class=\"n\">timestamp_nig</span>, </span><span class=\"param\"><span class=\"n\">currency</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.LOAD_OBJ", "modulename": "common.smart_contract", "qualname": "LOAD_OBJ", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.CHECK_UTXO_BALANCE", "modulename": "common.smart_contract", "qualname": "CHECK_UTXO_BALANCE", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span>, </span><span class=\"param\"><span class=\"n\">public_key_hash_to_check</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.load_smart_contract", "modulename": "common.smart_contract", "qualname": "load_smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.load_smart_contract_from_master_state", "modulename": "common.smart_contract", "qualname": "load_smart_contract_from_master_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.load_smart_contract_from_master_state_leader_node", "modulename": "common.smart_contract", "qualname": "load_smart_contract_from_master_state_leader_node", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract.create_smart_contract", "modulename": "common.smart_contract", "qualname": "create_smart_contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">smart_contract_public_key_hash</span>, </span><span class=\"param\"><span class=\"n\">sender_public_key_hash</span>, </span><span class=\"param\"><span class=\"n\">payload</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function", "modulename": "common.smart_contract_function", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract_function.smart_contract_memory_full", "modulename": "common.smart_contract_function", "qualname": "smart_contract_memory_full", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "common.smart_contract_function.GET_SELLER_SAFETY_COEF", "modulename": "common.smart_contract_function", "qualname": "GET_SELLER_SAFETY_COEF", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.GET_BUYER_SAFETY_COEF", "modulename": "common.smart_contract_function", "qualname": "GET_BUYER_SAFETY_COEF", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.CONVERT_2_NIG", "modulename": "common.smart_contract_function", "qualname": "CONVERT_2_NIG", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">requested_amount</span>, </span><span class=\"param\"><span class=\"n\">timestamp_nig</span>, </span><span class=\"param\"><span class=\"n\">currency</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.LOAD_OBJ", "modulename": "common.smart_contract_function", "qualname": "LOAD_OBJ", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.LOAD_SC_OLD", "modulename": "common.smart_contract_function", "qualname": "LOAD_SC_OLD", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">smart_contract_account</span>, </span><span class=\"param\"><span class=\"n\">smart_contract_sender</span>, </span><span class=\"param\"><span class=\"n\">payload</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.LOAD_SC", "modulename": "common.smart_contract_function", "qualname": "LOAD_SC", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">smart_contract_account</span>, </span><span class=\"param\"><span class=\"n\">payload</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.CHECK_UTXO_BALANCE", "modulename": "common.smart_contract_function", "qualname": "CHECK_UTXO_BALANCE", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span>, </span><span class=\"param\"><span class=\"n\">public_key_hash_to_check</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.GET_UTXO", "modulename": "common.smart_contract_function", "qualname": "GET_UTXO", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">public_key_hash</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.NIG_RATE", "modulename": "common.smart_contract_function", "qualname": "NIG_RATE", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.CANCEL_SC", "modulename": "common.smart_contract_function", "qualname": "CANCEL_SC", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">marketplace_account</span>, </span><span class=\"param\"><span class=\"n\">marketplace_step</span>, </span><span class=\"param\"><span class=\"n\">mp_request_signature</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_function.PAYMENT_DEFAULT_SC", "modulename": "common.smart_contract_function", "qualname": "PAYMENT_DEFAULT_SC", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">marketplace_account</span>, </span><span class=\"param\"><span class=\"n\">marketplace_step</span>, </span><span class=\"param\"><span class=\"n\">mp_request_signature</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.smart_contract_script", "modulename": "common.smart_contract_script", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.smart_contract_script.marketplace_request_code_raw", "modulename": "common.smart_contract_script", "qualname": "marketplace_request_code_raw", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n###VERSION:1\\n###END\\nclass MarketplaceRequest:\\n    def __init__(self):\\n        self.account=None\\n        self.step=0\\n        self.new_user_flag=False\\n        self.timestamp=datetime.timestamp(datetime.utcnow())\\n        self.timestamp_step1=None\\n        self.timestamp_step2=None\\n        self.timestamp_step3=None\\n        self.timestamp_step4=None\\n        self.requested_amount=0\\n        self.requested_currency=\\&#x27;EUR\\&#x27;\\n        self.requested_deposit=0\\n        self.requested_nig=0\\n        self.requested_nig_step2=None\\n        self.requested_nig_step2_flag=False\\n        self.timestamp_nig=None\\n        self.buyer_public_key_hex=None\\n        self.buyer_public_key_hash=None\\n        self.buyer_public_key_hash=None\\n        self.buyer_reput_trans=0\\n        self.buyer_reput_reliability=0\\n        self.seller_public_key_hex=&quot;&quot;\\n        self.seller_public_key_hash=&quot;&quot;\\n        self.encrypted_account=&quot;&quot;\\n        self.mp_request_signature=None\\n        self.mp_request_id=random.randint(10000000, 99999999)\\n        self.previous_mp_request_name=None\\n        self.mp_request_name=None\\n        self.seller_safety_coef=GET_SELLER_SAFETY_COEF()\\n        self.smart_contract_ref=None\\n        self.reputation_buyer=0\\n        self.reputation_seller=0\\n\\n    def get_mp_details(self,step):\\n        mp_details = [self.timestamp,self.buyer_public_key_hash,self.buyer_public_key_hex,self.requested_amount,self.mp_request_id]\\n        if self.requested_nig_step2_flag is True:requested_nig=self.requested_nig_step2\\n        else:requested_nig=self.requested_nig\\n        if self.step&gt;=1:\\n            self.seller_safety_coef=GET_SELLER_SAFETY_COEF()\\n            mp_details.extend([requested_nig,self.seller_safety_coef])\\n        if self.step&gt;=2:mp_details.extend([self.seller_public_key_hex,self.seller_public_key_hash,self.requested_deposit])\\n        if self.step==99:mp_details.append(&quot;cancellation&quot;)\\n        if self.step==66:mp_details.append(&quot;payment default&quot;)\\n        return mp_details\\n\\n    def get_requested_deposit(self):\\n        return self.requested_deposit\\n\\n    def get_new_user_flag(self):\\n        return self.new_user_flag\\n\\n    def get_reputation(self):\\n        if self.reputation_buyer!=0 or self.reputation_seller!=0:return {self.buyer_public_key_hash:self.reputation_buyer,self.seller_public_key_hash:self.reputation_seller}\\n        else:return None\\n\\n    def get_mp_info(self,step,user_public_key_hash):\\n        try:step=int(step)\\n        except:step=99\\n        mp_details=None\\n        flag=False\\n        readonly_flag=False\\n        if self.step!=4 and self.step!=45 and self.step!=66 and self.step!=98 and self.step!=99:\\n            if step==1:\\n                flag=True\\n                if self.buyer_public_key_hash==user_public_key_hash:readonly_flag=True\\n            if step==2:\\n                if self.buyer_public_key_hash==user_public_key_hash:flag=True\\n                if self.step==1:readonly_flag=True\\n                if self.step==3:readonly_flag=True\\n            if step==3:\\n                if self.seller_public_key_hash==user_public_key_hash:flag=True\\n                if self.step==2:readonly_flag=True\\n            if flag is True:\\n                mp_details = {&quot;timestamp_nig&quot;: self.timestamp,&quot;requester_public_key_hash&quot;: self.buyer_public_key_hash,&quot;requester_public_key_hex&quot;: self.buyer_public_key_hex,&quot;seller_public_key_hash&quot;: self.seller_public_key_hash,&quot;requested_amount&quot;: self.requested_amount,&quot;requested_currency&quot;:self.requested_currency,&quot;requested_nig&quot;: self.requested_nig,&quot;payment_ref&quot;: self.mp_request_name}\\n                mp_details[\\&#x27;seller_public_key_hex\\&#x27;]=self.seller_public_key_hex\\n                mp_details[\\&#x27;encrypted_account\\&#x27;]=self.encrypted_account\\n                mp_details[\\&#x27;smart_contract_ref\\&#x27;]=self.smart_contract_ref\\n                mp_details[\\&#x27;readonly_flag\\&#x27;]=readonly_flag\\n                mp_details[\\&#x27;buyer_reput_trans\\&#x27;]=self.buyer_reput_trans\\n                mp_details[\\&#x27;buyer_reput_reliability\\&#x27;]=self.buyer_reput_reliability\\n                mp_details[\\&#x27;step\\&#x27;]=self.step\\n        return mp_details\\n\\n    def get_mp_info_archive(self,step):\\n        mp_details=None\\n        if step==self.step:\\n            mp_details = {&quot;timestamp_nig&quot;: self.timestamp_step4, &quot;readonly_flag&quot;:False}\\n        return mp_details\\n\\n    def step1(self,mp_request_name,buyer_public_key_hash,buyer_public_key_hex,requested_amount,smart_contract_ref,new_user_flag,buyer_reput_trans,buyer_reput_reliability):\\n        if buyer_public_key_hash is not None and \\&#x27;None\\&#x27; not in buyer_public_key_hash:\\n            if self.step==0:\\n                self.mp_request_name=mp_request_name\\n                self.buyer_public_key_hash=buyer_public_key_hash\\n                self.buyer_public_key_hex=buyer_public_key_hex\\n                self.requested_amount=requested_amount\\n                self.timestamp_nig=datetime.timestamp(datetime.utcnow())\\n                self.requested_nig=CONVERT_2_NIG(requested_amount,self.timestamp_nig,self.requested_currency)\\n                self.step=1\\n                self.smart_contract_ref=smart_contract_ref\\n                self.timestamp_step1=datetime.timestamp(datetime.utcnow())\\n                if new_user_flag==&quot;true&quot; or new_user_flag==&quot;True&quot;:new_user_flag=True\\n                if new_user_flag==&quot;false&quot; or new_user_flag==&quot;False&quot;:\\n                    new_user_flag=False\\n                    self.requested_deposit=CONVERT_2_NIG(requested_amount,self.timestamp_nig,self.requested_currency)*GET_BUYER_SAFETY_COEF()\\n                self.new_user_flag=new_user_flag\\n                self.buyer_reput_trans=buyer_reput_trans\\n                self.buyer_reput_reliability=buyer_reput_reliability\\n            else:raise ValueError(\\&#x27;request cannot be confirmed in step 1\\&#x27;)\\n        else:raise ValueError(\\&#x27;Please select a buyer\\&#x27;)\\n\\n    def step2(self,seller_public_key_hash,seller_public_key_hex,encrypted_account,mp_request_signature):\\n        if seller_public_key_hash is not None and \\&#x27;None\\&#x27; not in seller_public_key_hash:\\n            if self.step==1:\\n                self.seller_public_key_hash=seller_public_key_hash\\n                self.seller_public_key_hex=seller_public_key_hex\\n                self.timestamp_nig=datetime.timestamp(datetime.utcnow())\\n                self.requested_nig_step2=copy.deepcopy(self.requested_nig)\\n                self.requested_nig_step2_flag=True\\n                self.requested_nig=CONVERT_2_NIG(self.requested_amount,self.timestamp_nig,self.requested_currency)\\n                self.encrypted_account=encrypted_account\\n                self.mp_request_signature=mp_request_signature\\n                self.step=2\\n                self.timestamp_step2=datetime.timestamp(datetime.utcnow())\\n            else:raise ValueError(\\&#x27;request cannot be confirmed in step 2\\&#x27;)\\n        else:raise ValueError(\\&#x27;Please select a seller\\&#x27;)\\n            \\n\\n    def step3(self,mp_request_signature):\\n        if self.step==2:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=3\\n            self.timestamp_step3=datetime.timestamp(datetime.utcnow())\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 3\\&#x27;)\\n\\n    def step4(self,mp_request_signature):\\n        if self.step==3:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=4\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n            self.reputation_buyer=1\\n            self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 4\\&#x27;)\\n\\n    def step45(self,mp_request_signature):\\n        if self.step==3:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=45\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n            self.reputation_buyer=-1\\n            self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 45\\&#x27;)\\n\\n    def check_cancellation(self,mp_request_signature):\\n        if self.step&lt;3:\\n          self.mp_request_signature=mp_request_signature\\n          self.step=99\\n          self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in cancellation\\&#x27;)\\n\\n    def check_payment_default(self,mp_request_signature):\\n        if self.step==3:\\n          self.mp_request_signature=mp_request_signature\\n          self.step=66\\n          self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n          self.reputation_buyer=-1\\n          self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in payment default\\&#x27;)\\n\\n    def validate_step(self):\\n        signature_decoded = binascii.unhexlify(self.mp_request_signature.encode(&quot;utf-8&quot;))\\n        if self.step==2 or self.step==4 or self.step==45 or self.step==66:\\n            public_key_bytes = self.seller_public_key_hex.encode(&quot;utf-8&quot;)\\n        elif self.step==3 or self.step==99:\\n            public_key_bytes = self.buyer_public_key_hex.encode(&quot;utf-8&quot;)\\n        else:\\n            raise ValueError(f\\&#x27;request not in predefined step:{self.step}\\&#x27;)\\n      \\n        public_key_object = RSA.import_key(binascii.unhexlify(public_key_bytes))\\n        transaction_bytes = json.dumps(self.get_mp_details(self.step), indent=2).encode(\\&#x27;utf-8\\&#x27;)\\n        transaction_hash = SHA256.new(transaction_bytes)\\n        pkcs1_15.new(public_key_object).verify(transaction_hash, signature_decoded)\\n\\n    def check_expiration(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        return self.check_expiration_raw(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,False)\\n\\n    def validate_expiration(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        return self.check_expiration_raw(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,True)\\n\\n    def check_expiration_raw(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,error_flag):\\n        expiration_flag=False\\n        check_now=datetime.timestamp(datetime.utcnow())\\n        if self.step==1 and check_now-self.timestamp_step1&gt;MARKETPLACE_STEP1_EXPIRATION:expiration_flag=True\\n        if self.step==2 and check_now-self.timestamp_step2&gt;MARKETPLACE_STEP2_EXPIRATION:\\n            self.reputation_buyer=-1\\n            expiration_flag=True\\n        if self.step==3 and check_now-self.timestamp_step3&gt;MARKETPLACE_STEP3_EXPIRATION:\\n            self.reputation_seller=-1\\n            expiration_flag=True\\n        if expiration_flag is True:\\n            self.step=98\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n        else:\\n            if error_flag is True:ValueError(\\&#x27;smart_contract is not expired\\&#x27;)\\n        return expiration_flag\\n\\t\\t\\n    def get_mp_info_and_expiration(self,step,user_public_key_hash,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        mp_info=self.get_mp_info(step,user_public_key_hash)\\n        expiration=self.check_expiration(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION)\\n        return mp_info,expiration,self.requested_amount,self.step\\n\\n    def cancel(self,user_public_key_hash,mp_request_signature):\\n        if self.step&lt;3 and self.buyer_public_key_hash==user_public_key_hash:\\n            CANCEL_SC(self.smart_contract_ref,self.step,mp_request_signature)\\n        else:\\n            raise ValueError(f\\&#x27;Cancellation not possible in step:{self.step} for user:{user_public_key_hash}\\&#x27;)\\n\\n    def payment_default(self,user_public_key_hash,mp_request_signature):\\n        if self.step==3 and self.seller_public_key_hash==user_public_key_hash:\\n            PAYMENT_DEFAULT_SC(self.smart_contract_ref,self.step,mp_request_signature)\\n        else:\\n            raise ValueError(f\\&#x27;payment default not possible in step:{self.step} for user:{user_public_key_hash}\\&#x27;)\\n\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_request_code_script", "modulename": "common.smart_contract_script", "qualname": "marketplace_request_code_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n###VERSION:1\\n###END\\nclass MarketplaceRequestCode:\\n    def __init__(self):\\n        self.code=\\&#x27;\\&#x27;\\&#x27;\\n###VERSION:1\\n###END\\nclass MarketplaceRequest:\\n    def __init__(self):\\n        self.account=None\\n        self.step=0\\n        self.new_user_flag=False\\n        self.timestamp=datetime.timestamp(datetime.utcnow())\\n        self.timestamp_step1=None\\n        self.timestamp_step2=None\\n        self.timestamp_step3=None\\n        self.timestamp_step4=None\\n        self.requested_amount=0\\n        self.requested_currency=\\&#x27;EUR\\&#x27;\\n        self.requested_deposit=0\\n        self.requested_nig=0\\n        self.requested_nig_step2=None\\n        self.requested_nig_step2_flag=False\\n        self.timestamp_nig=None\\n        self.buyer_public_key_hex=None\\n        self.buyer_public_key_hash=None\\n        self.buyer_public_key_hash=None\\n        self.buyer_reput_trans=0\\n        self.buyer_reput_reliability=0\\n        self.seller_public_key_hex=&quot;&quot;\\n        self.seller_public_key_hash=&quot;&quot;\\n        self.encrypted_account=&quot;&quot;\\n        self.mp_request_signature=None\\n        self.mp_request_id=random.randint(10000000, 99999999)\\n        self.previous_mp_request_name=None\\n        self.mp_request_name=None\\n        self.seller_safety_coef=GET_SELLER_SAFETY_COEF()\\n        self.smart_contract_ref=None\\n        self.reputation_buyer=0\\n        self.reputation_seller=0\\n\\n    def get_mp_details(self,step):\\n        mp_details = [self.timestamp,self.buyer_public_key_hash,self.buyer_public_key_hex,self.requested_amount,self.mp_request_id]\\n        if self.requested_nig_step2_flag is True:requested_nig=self.requested_nig_step2\\n        else:requested_nig=self.requested_nig\\n        if self.step&gt;=1:\\n            self.seller_safety_coef=GET_SELLER_SAFETY_COEF()\\n            mp_details.extend([requested_nig,self.seller_safety_coef])\\n        if self.step&gt;=2:mp_details.extend([self.seller_public_key_hex,self.seller_public_key_hash,self.requested_deposit])\\n        if self.step==99:mp_details.append(&quot;cancellation&quot;)\\n        if self.step==66:mp_details.append(&quot;payment default&quot;)\\n        return mp_details\\n\\n    def get_requested_deposit(self):\\n        return self.requested_deposit\\n\\n    def get_new_user_flag(self):\\n        return self.new_user_flag\\n\\n    def get_reputation(self):\\n        if self.reputation_buyer!=0 or self.reputation_seller!=0:return {self.buyer_public_key_hash:self.reputation_buyer,self.seller_public_key_hash:self.reputation_seller}\\n        else:return None\\n\\n    def get_mp_info(self,step,user_public_key_hash):\\n        try:step=int(step)\\n        except:step=99\\n        mp_details=None\\n        flag=False\\n        readonly_flag=False\\n        if self.step!=4 and self.step!=45 and self.step!=66 and self.step!=98 and self.step!=99:\\n            if step==1:\\n                flag=True\\n                if self.buyer_public_key_hash==user_public_key_hash:readonly_flag=True\\n            if step==2:\\n                if self.buyer_public_key_hash==user_public_key_hash:flag=True\\n                if self.step==1:readonly_flag=True\\n                if self.step==3:readonly_flag=True\\n            if step==3:\\n                if self.seller_public_key_hash==user_public_key_hash:flag=True\\n                if self.step==2:readonly_flag=True\\n            if flag is True:\\n                mp_details = {&quot;timestamp_nig&quot;: self.timestamp,&quot;requester_public_key_hash&quot;: self.buyer_public_key_hash,&quot;requester_public_key_hex&quot;: self.buyer_public_key_hex,&quot;seller_public_key_hash&quot;: self.seller_public_key_hash,&quot;requested_amount&quot;: self.requested_amount,&quot;requested_currency&quot;:self.requested_currency,&quot;requested_nig&quot;: self.requested_nig,&quot;payment_ref&quot;: self.mp_request_name}\\n                mp_details[\\&#x27;seller_public_key_hex\\&#x27;]=self.seller_public_key_hex\\n                mp_details[\\&#x27;encrypted_account\\&#x27;]=self.encrypted_account\\n                mp_details[\\&#x27;smart_contract_ref\\&#x27;]=self.smart_contract_ref\\n                mp_details[\\&#x27;readonly_flag\\&#x27;]=readonly_flag\\n                mp_details[\\&#x27;buyer_reput_trans\\&#x27;]=self.buyer_reput_trans\\n                mp_details[\\&#x27;buyer_reput_reliability\\&#x27;]=self.buyer_reput_reliability\\n                mp_details[\\&#x27;step\\&#x27;]=self.step\\n        return mp_details\\n\\n    def get_mp_info_archive(self,step):\\n        mp_details=None\\n        if step==self.step:\\n            mp_details = {&quot;timestamp_nig&quot;: self.timestamp_step4, &quot;readonly_flag&quot;:False}\\n        return mp_details\\n\\n    def step1(self,mp_request_name,buyer_public_key_hash,buyer_public_key_hex,requested_amount,smart_contract_ref,new_user_flag,buyer_reput_trans,buyer_reput_reliability):\\n        if buyer_public_key_hash is not None and \\&#x27;None\\&#x27; not in buyer_public_key_hash:\\n            if self.step==0:\\n                self.mp_request_name=mp_request_name\\n                self.buyer_public_key_hash=buyer_public_key_hash\\n                self.buyer_public_key_hex=buyer_public_key_hex\\n                self.requested_amount=requested_amount\\n                self.timestamp_nig=datetime.timestamp(datetime.utcnow())\\n                self.requested_nig=CONVERT_2_NIG(requested_amount,self.timestamp_nig,self.requested_currency)\\n                self.step=1\\n                self.smart_contract_ref=smart_contract_ref\\n                self.timestamp_step1=datetime.timestamp(datetime.utcnow())\\n                if new_user_flag==&quot;true&quot; or new_user_flag==&quot;True&quot;:new_user_flag=True\\n                if new_user_flag==&quot;false&quot; or new_user_flag==&quot;False&quot;:\\n                    new_user_flag=False\\n                    self.requested_deposit=CONVERT_2_NIG(requested_amount,self.timestamp_nig,self.requested_currency)*GET_BUYER_SAFETY_COEF()\\n                self.new_user_flag=new_user_flag\\n                self.buyer_reput_trans=buyer_reput_trans\\n                self.buyer_reput_reliability=buyer_reput_reliability\\n            else:raise ValueError(\\&#x27;request cannot be confirmed in step 1\\&#x27;)\\n        else:raise ValueError(\\&#x27;Please select a buyer\\&#x27;)\\n\\n    def step2(self,seller_public_key_hash,seller_public_key_hex,encrypted_account,mp_request_signature):\\n        if seller_public_key_hash is not None and \\&#x27;None\\&#x27; not in seller_public_key_hash:\\n            if self.step==1:\\n                self.seller_public_key_hash=seller_public_key_hash\\n                self.seller_public_key_hex=seller_public_key_hex\\n                self.timestamp_nig=datetime.timestamp(datetime.utcnow())\\n                self.requested_nig_step2=copy.deepcopy(self.requested_nig)\\n                self.requested_nig_step2_flag=True\\n                self.requested_nig=CONVERT_2_NIG(self.requested_amount,self.timestamp_nig,self.requested_currency)\\n                self.encrypted_account=encrypted_account\\n                self.mp_request_signature=mp_request_signature\\n                self.step=2\\n                self.timestamp_step2=datetime.timestamp(datetime.utcnow())\\n            else:raise ValueError(\\&#x27;request cannot be confirmed in step 2\\&#x27;)\\n        else:raise ValueError(\\&#x27;Please select a seller\\&#x27;)\\n            \\n\\n    def step3(self,mp_request_signature):\\n        if self.step==2:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=3\\n            self.timestamp_step3=datetime.timestamp(datetime.utcnow())\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 3\\&#x27;)\\n\\n    def step4(self,mp_request_signature):\\n        if self.step==3:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=4\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n            self.reputation_buyer=1\\n            self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 4\\&#x27;)\\n\\n    def step45(self,mp_request_signature):\\n        if self.step==3:\\n            self.mp_request_signature=mp_request_signature\\n            self.step=45\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n            self.reputation_buyer=-1\\n            self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in step 45\\&#x27;)\\n\\n    def check_cancellation(self,mp_request_signature):\\n        if self.step&lt;3:\\n          self.mp_request_signature=mp_request_signature\\n          self.step=99\\n          self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in cancellation\\&#x27;)\\n\\n    def check_payment_default(self,mp_request_signature):\\n        if self.step==3:\\n          self.mp_request_signature=mp_request_signature\\n          self.step=66\\n          self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n          self.reputation_buyer=-1\\n          self.reputation_seller=1\\n        else:raise ValueError(\\&#x27;request cannot be confirmed in payment default\\&#x27;)\\n\\n    def validate_step(self):\\n        signature_decoded = binascii.unhexlify(self.mp_request_signature.encode(&quot;utf-8&quot;))\\n        if self.step==2 or self.step==4 or self.step==45 or self.step==66:\\n            public_key_bytes = self.seller_public_key_hex.encode(&quot;utf-8&quot;)\\n        elif self.step==3 or self.step==99:\\n            public_key_bytes = self.buyer_public_key_hex.encode(&quot;utf-8&quot;)\\n        else:\\n            raise ValueError(f\\&#x27;request not in predefined step:{self.step}\\&#x27;)\\n      \\n        public_key_object = RSA.import_key(binascii.unhexlify(public_key_bytes))\\n        transaction_bytes = json.dumps(self.get_mp_details(self.step), indent=2).encode(\\&#x27;utf-8\\&#x27;)\\n        transaction_hash = SHA256.new(transaction_bytes)\\n        pkcs1_15.new(public_key_object).verify(transaction_hash, signature_decoded)\\n\\n    def check_expiration(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        return self.check_expiration_raw(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,False)\\n\\n    def validate_expiration(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        return self.check_expiration_raw(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,True)\\n\\n    def check_expiration_raw(self,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION,error_flag):\\n        expiration_flag=False\\n        check_now=datetime.timestamp(datetime.utcnow())\\n        if self.step==1 and check_now-self.timestamp_step1&gt;MARKETPLACE_STEP1_EXPIRATION:expiration_flag=True\\n        if self.step==2 and check_now-self.timestamp_step2&gt;MARKETPLACE_STEP2_EXPIRATION:\\n            self.reputation_buyer=-1\\n            expiration_flag=True\\n        if self.step==3 and check_now-self.timestamp_step3&gt;MARKETPLACE_STEP3_EXPIRATION:\\n            self.reputation_seller=-1\\n            expiration_flag=True\\n        if expiration_flag is True:\\n            self.step=98\\n            self.timestamp_step4=datetime.timestamp(datetime.utcnow())\\n        else:\\n            if error_flag is True:ValueError(\\&#x27;smart_contract is not expired\\&#x27;)\\n        return expiration_flag\\n\\t\\t\\n    def get_mp_info_and_expiration(self,step,user_public_key_hash,MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION):\\n        mp_info=self.get_mp_info(step,user_public_key_hash)\\n        expiration=self.check_expiration(MARKETPLACE_STEP1_EXPIRATION,MARKETPLACE_STEP2_EXPIRATION,MARKETPLACE_STEP3_EXPIRATION)\\n        return mp_info,expiration,self.requested_amount,self.step\\n\\n    def cancel(self,user_public_key_hash,mp_request_signature):\\n        if self.step&lt;3 and self.buyer_public_key_hash==user_public_key_hash:\\n            CANCEL_SC(self.smart_contract_ref,self.step,mp_request_signature)\\n        else:\\n            raise ValueError(f\\&#x27;Cancellation not possible in step:{self.step} for user:{user_public_key_hash}\\&#x27;)\\n\\n    def payment_default(self,user_public_key_hash,mp_request_signature):\\n        if self.step==3 and self.seller_public_key_hash==user_public_key_hash:\\n            PAYMENT_DEFAULT_SC(self.smart_contract_ref,self.step,mp_request_signature)\\n        else:\\n            raise ValueError(f\\&#x27;payment default not possible in step:{self.step} for user:{user_public_key_hash}\\&#x27;)\\n\\n\\&#x27;\\&#x27;\\&#x27;\\nmarketplace_request_code=MarketplaceRequestCode()\\nmemory_list.add([marketplace_request_code,\\&#x27;marketplace_request_code\\&#x27;,[\\&#x27;code\\&#x27;]])\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script", "modulename": "common.smart_contract_script", "qualname": "marketplace_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n###VERSION:1\\n###END\\nclass Marketplace:\\n    def __init__(self):\\n        self.first_mp_request_name=None\\n        self.current_mp_request_name=None\\n        self.current_mp_request_count=1\\n\\n    def get_mp_request_name(self):\\n        return &quot;mp_request_&quot;+str(self.current_mp_request_count)\\n\\n    def add_mp_request_name(self,mp_request_name):\\n        if self.first_mp_request_name is None or self.first_mp_request_name==&quot;null&quot; or self.first_mp_request_name==&quot;None&quot;:self.first_mp_request_name=mp_request_name\\n        self.current_mp_request_name=mp_request_name\\n        self.current_mp_request_count+=1\\n\\n    def get_current_mp_request_name(self):\\n        return self.current_mp_request_name\\n\\n    def get_marketplace_step_list(self,step,user_public_key_hash):\\n        marketplace_step_list=[]\\n        cursor=self.current_mp_request_name\\n        while cursor is not None and \\&#x27;null\\&#x27; not in cursor:\\n            cursor_obj=get_obj_by_name(cursor)\\n            if step==1 and cursor_obj.step==step and cursor_obj.buyer_public_key_hash!=user_public_key_hash:marketplace_step_list.append(cursor_obj.get_mp_info(1,user_public_key_hash))\\n            elif step==2 and cursor_obj.step==step and cursor_obj.buyer_public_key_hash==user_public_key_hash:marketplace_step_list.append(cursor_obj.get_mp_info(2,user_public_key_hash))\\n            elif step==3 and cursor_obj.step==step and cursor_obj.seller_public_key_hash==user_public_key_hash:marketplace_step_list.append(cursor_obj.get_mp_info(3,user_public_key_hash))\\n            cursor=cursor_obj.previous_mp_request_name\\n        return marketplace_step_list\\n\\nmarketplace=Marketplace()\\nmemory_list.add([marketplace,\\&#x27;marketplace\\&#x27;,[\\&#x27;first_mp_request_name\\&#x27;,\\&#x27;current_mp_request_name\\&#x27;,\\&#x27;current_mp_request_count\\&#x27;]])\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script1", "modulename": "common.smart_contract_script", "qualname": "marketplace_script1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step2_done=MarketplaceRequest()\\nmp_request_step2_done.step1(&quot;mp_request_step2_done&quot;,requester_public_key_hash,requester_public_key_hex,requested_amount,smart_contract_ref,new_user_flag,reputation_0,reputation_1)\\nmp_request_step2_done.account=sender\\nmemory_list.add([mp_request_step2_done,mp_request_step2_done.mp_request_name,[\\&#x27;account\\&#x27;,\\&#x27;step\\&#x27;,\\&#x27;timestamp\\&#x27;,\\&#x27;requested_amount\\&#x27;,\\n  \\&#x27;requested_currency\\&#x27;,\\&#x27;requested_deposit\\&#x27;,\\&#x27;buyer_public_key_hash\\&#x27;,\\&#x27;timestamp_step1\\&#x27;,\\&#x27;timestamp_step2\\&#x27;,\\&#x27;timestamp_step3\\&#x27;,\\&#x27;timestamp_step4\\&#x27;,\\n  \\&#x27;buyer_public_key_hex\\&#x27;,\\&#x27;requested_nig\\&#x27;,\\&#x27;timestamp_nig\\&#x27;,\\&#x27;seller_public_key_hex\\&#x27;,\\&#x27;seller_public_key_hash\\&#x27;,\\&#x27;encrypted_account\\&#x27;,\\&#x27;buyer_reput_trans\\&#x27;,\\&#x27;buyer_reput_reliability\\&#x27;,\\n  \\&#x27;mp_request_signature\\&#x27;,\\&#x27;mp_request_id\\&#x27;,\\&#x27;previous_mp_request_name\\&#x27;,\\&#x27;mp_request_name\\&#x27;,\\&#x27;seller_safety_coef\\&#x27;,\\&#x27;smart_contract_ref\\&#x27;,\\&#x27;new_user_flag\\&#x27;,\\&#x27;reputation_buyer\\&#x27;,\\&#x27;reputation_seller\\&#x27;]])\\nmp_request_step2_done.get_requested_deposit()\\n\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script_step", "modulename": "common.smart_contract_script", "qualname": "marketplace_script_step", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmarketplace.get_marketplace_step_list(marketplace_step,user_public_key_hash)\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script2_1", "modulename": "common.smart_contract_script", "qualname": "marketplace_script2_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.get_mp_details(2)\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script2_2", "modulename": "common.smart_contract_script", "qualname": "marketplace_script2_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.step2(seller_public_key_hash,seller_public_key_hex,requested_nig,encrypted_account,mp_request_signature)\\nmp_request_step1.validate_step()\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script3_1", "modulename": "common.smart_contract_script", "qualname": "marketplace_script3_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.encrypted_account\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script3_2", "modulename": "common.smart_contract_script", "qualname": "marketplace_script3_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.get_mp_details(3)\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script3_3", "modulename": "common.smart_contract_script", "qualname": "marketplace_script3_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.step3(mp_request_signature)\\nmp_request_step1.validate_step()\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script4_1", "modulename": "common.smart_contract_script", "qualname": "marketplace_script4_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.get_mp_details(4)\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script4_2", "modulename": "common.smart_contract_script", "qualname": "marketplace_script4_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nmp_request_step1.step4(mp_request_signature)\\nmp_request_step1.validate_step()\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.marketplace_script_test", "modulename": "common.smart_contract_script", "qualname": "marketplace_script_test", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;marketplace&#x27;,&#x27;mp_request_2&#x27;]\\nmp_request_step1=mp_request_2\\nmp_details=mp_request_step1.get_mp_details(2)\\n&quot;"}, {"fullname": "common.smart_contract_script.block_script", "modulename": "common.smart_contract_script", "qualname": "block_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n###VERSION:1\\n###END\\nclass BlockVote:\\n    def __init__(self,block_PoH):\\n        self.block_PoH=block_PoH\\n        self.vote_list=[]\\n        self.slash_list=[]\\n        self.validated=None\\n\\n    def check_vote(self,node):\\n        if node in self.vote_list or node in self.slash_list or self.validated is True or self.validated is False:return False\\n        else:return True\\n\\n    def vote(self,node):\\n        if node not in self.vote_list:self.vote_list.append(node)\\n        if node in self.slash_list:self.slash_list.remove(node)\\n\\n    def slash(self,node):\\n        if node not in self.slash_list:self.slash_list.append(node)\\n        if node in self.vote_list:self.vote_list.remove(node)\\n\\n    def vote_ratio(self):\\n        total=len(self.vote_list)+len(self.slash_list)\\n        self.ratio=0\\n        if total&gt;0:\\n            ratio_vote=float(len(self.vote_list)/total)\\n            ratio_slash=float(len(self.slash_list)/total)\\n            if ratio_vote&gt;ratio_slash:self.ratio=ratio_vote\\n            if ratio_vote&lt;ratio_slash:self.ratio=-ratio_slash\\n        return self.ratio\\n        \\n    def validate(self,node):\\n        self.vote_ratio()\\n        total_vote=len(self.vote_list)+len(self.slash_list)\\n        if self.ratio&gt;=0.66 and total_vote&gt;=2:self.validated=True\\n        if self.ratio&lt;=0.66 and total_vote&gt;=2:self.validated=False\\n        return self.validated\\n\\n    def is_validated(self,node):\\n        return self.validated\\n\\nblock_vote=BlockVote(block_PoH)\\nmemory_list.add([block_vote,&#x27;block_vote&#x27;,[&#x27;block_PoH&#x27;,&#x27;vote_list&#x27;,&#x27;slash_list&#x27;,&#x27;validated&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.node_network_script", "modulename": "common.smart_contract_script", "qualname": "node_network_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n###VERSION:1\\n###END\\nclass NodeNetwork:\\n    def __init__(self):\\n        self.node_dict={}\\n\\n    def add_node(self,node_input_dict):\\n        node_dict_temp=self.node_dict.copy()\\n        node_public_key_hash=node_input_dict[&#x27;node_public_key_hash&#x27;]\\n        node_public_key_hex=node_input_dict[&#x27;node_public_key_hex&#x27;]\\n        node_url=node_input_dict[&#x27;node_url&#x27;]\\n        try:\\n            node_dict_temp[node_public_key_hash]\\n        except:\\n            new_node_dict={}\\n            new_node_dict[&#x27;creation&#x27;]=datetime.timestamp(datetime.utcnow())\\n            new_node_dict[&#x27;public_key_hex&#x27;]=node_public_key_hex\\n            new_node_dict[&#x27;node_url&#x27;]=node_url\\n            new_node_dict[&#x27;active&#x27;]=True\\n            node_dict_temp[node_public_key_hash]=new_node_dict\\n            self.node_dict=node_dict_temp\\n\\n    def get_public_key_hash(self,node_url):\\n        public_key_hash=None\\n        for item in [i for i in self.node_dict.items() if i[1][&#x27;node_url&#x27;]==node_url]:\\n            public_key_hash=item[0]\\n        return public_key_hash\\n\\n    def get_public_key_hex(self,node_public_key_hash):\\n        public_key_hex=None\\n        try:\\n            public_key_hex=self.node_dict[node_public_key_hash][&#x27;public_key_hex&#x27;]\\n        except:pass\\n        return public_key_hex\\n\\n    def active_node(self,node_public_key_hash):\\n        try:\\n            self.node_dict[node_public_key_hash][&#x27;active&#x27;]=True\\n        except:pass\\n\\n    def deactive_node(self,node_public_key_hash):\\n        try:\\n            self.node_dict[node_public_key_hash][&#x27;active&#x27;]=False\\n        except:pass\\n\\n    def remove_node(self,node_public_key_hash):\\n        try:del self.node_dict[node_public_key_hash]\\n        except:pass\\n        \\nnode_network=NodeNetwork()\\nmemory_list.add([node_network,&#x27;node_network&#x27;,[&#x27;node_dict&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.node_script", "modulename": "common.smart_contract_script", "qualname": "node_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nnode_input_dict={}\\nnode_input_dict[&#x27;node_public_key_hash&#x27;]=node_public_key_hash\\nnode_input_dict[&#x27;node_public_key_hex&#x27;]=node_public_key_hex\\nnode_input_dict[&#x27;node_url&#x27;]=node_url\\nnode_network.add_node(node_input_dict)\\nmemory_list.add([node_network,&#x27;node_network&#x27;,[&#x27;node_dict&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.participant_get_score_script", "modulename": "common.smart_contract_script", "qualname": "participant_get_score_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;participant&#x27;]\\nparticipant.get_score_data()\\n&quot;"}, {"fullname": "common.smart_contract_script.ranking_dic", "modulename": "common.smart_contract_script", "qualname": "ranking_dic", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ranking&#x27;: []}"}, {"fullname": "common.smart_contract_script.contest_script", "modulename": "common.smart_contract_script", "qualname": "contest_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n###VERSION:1\\n###END\\nclass Contest:\\n    def __init__(self):\\n        self.participant_list=[]\\n        self.ranking={&#x27;ranking&#x27;: []}\\n\\n    def add_participant(self,public_key_hash,smart_contract_account):\\n        if self.check_participant(public_key_hash) is False:self.participant_list.append([public_key_hash,smart_contract_account])\\n\\n    def check_participant(self,public_key_hash):\\n        if public_key_hash in [y[0] for y in self.participant_list]:return True\\n        else:return False\\n\\n    def remove_participant(self,public_key_hash):\\n        for item in [y for y in self.participant_list if y[0]==public_key_hash]:\\n            self.participant_list.remove(smart_contract_account)\\n\\n    def get_smart_contract(self,public_key_hash):\\n        result=None\\n        for item in self.participant_list:\\n            if public_key_hash==item[0]:\\n                result=item[1]\\n                break\\n        return result\\n\\n    def get_ranking(self):\\n        raw_ranking=[]\\n        for item in self.participant_list:\\n            try:\\n                payload=&#x27;&#x27;&#x27;\\nmemory_obj_2_load=[&#x27;participant&#x27;]\\nparticipant.get_score_data()\\n&#x27;&#x27;&#x27;\\n                result=LOAD_SC(item[1],payload)\\n                if result is not None:raw_ranking.append(result)\\n            except:pass\\n        counter=1\\n        for item in sorted(raw_ranking, key=lambda d: d[1],reverse = True):\\n            item.insert(0,counter)\\n            self.ranking[&#x27;ranking&#x27;].append(item)\\n            counter+=1\\n        return self.ranking\\n        \\n        \\ncontest=Contest()\\nmemory_list.add([contest,&#x27;contest&#x27;,[&#x27;participant_list&#x27;,&#x27;ranking&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.participant_script1", "modulename": "common.smart_contract_script", "qualname": "participant_script1", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n###VERSION:1\\n###END\\nclass Participant:\\n    def __init__(self,smart_contract_account,public_key_hash,name):\\n        if smart_contract_account is None or smart_contract_account==\\&#x27;None\\&#x27;:raise ValueError(\\&#x27;smart_contract_account is missing\\&#x27;)\\n        else:self.smart_contract_account=smart_contract_account\\n        if public_key_hash is None or public_key_hash==\\&#x27;None\\&#x27;:raise ValueError(\\&#x27;public_key_hash is missing\\&#x27;)\\n        else:self.public_key_hash=public_key_hash\\n        if name is None or name==\\&#x27;None\\&#x27;:raise ValueError(\\&#x27;name is missing\\&#x27;)\\n        else:self.name=name\\n        self.score=0\\n        self.total_debit=0\\n        self.profit=0\\n\\n    def get_score_data(self):\\n        self.score=int(round(self.profit*self.total_debit, 0)/10000)\\n        return [self.name,self.score]\\n\\n    def refresh_score(self):\\n        try:\\n            utxo=GET_UTXO(self.public_key_hash)\\n            total_euro=normal_round(utxo[\\&#x27;total\\&#x27;]*NIG_RATE(),ROUND_VALUE_DIGIT)\\n            total_debit=0\\n            for key in utxo[\\&#x27;balance\\&#x27;][\\&#x27;debit\\&#x27;].keys():\\n                total_debit+=utxo[\\&#x27;balance\\&#x27;][\\&#x27;debit\\&#x27;][key][\\&#x27;amount\\&#x27;]*NIG_RATE(timestamp=utxo[\\&#x27;balance\\&#x27;][\\&#x27;debit\\&#x27;][key][\\&#x27;timestamp\\&#x27;])\\n            self.total_debit=total_debit\\n            total_credit=0\\n            for key in utxo[\\&#x27;balance\\&#x27;][\\&#x27;credit\\&#x27;].keys():\\n                total_credit+=utxo[\\&#x27;balance\\&#x27;][\\&#x27;credit\\&#x27;][key][\\&#x27;amount\\&#x27;]*NIG_RATE(timestamp=utxo[\\&#x27;balance\\&#x27;][\\&#x27;credit\\&#x27;][key][\\&#x27;timestamp\\&#x27;])\\n            self.profit=total_euro+(total_credit-total_debit)\\n            self.score=int(round(self.profit*self.total_debit, 0)/10000)\\n        except Exception as e:\\n            logging.info(f&quot;###INFO refresh_score issue: {e}&quot;)\\n            logging.exception(e)\\n&#x27;"}, {"fullname": "common.smart_contract_script.participant_script2", "modulename": "common.smart_contract_script", "qualname": "participant_script2", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\r\\nparticipant=Participant(&#x27;$smart_contract_ref&#x27;,&#x27;$requester_public_key_hash&#x27;,&#x27;$requested_name&#x27;)\\nmemory_list.add([participant,&#x27;participant&#x27;,[&#x27;public_key_hash&#x27;,&#x27;name&#x27;,&#x27;score&#x27;,&#x27;total_debit&#x27;,&#x27;profit&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.participant_retrieve_smart_contract", "modulename": "common.smart_contract_script", "qualname": "participant_retrieve_smart_contract", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;contest&#x27;]\\ncontest.get_smart_contract(public_key_hash)\\n&quot;"}, {"fullname": "common.smart_contract_script.participant_refresh_score_script", "modulename": "common.smart_contract_script", "qualname": "participant_refresh_score_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;participant&#x27;]\\nparticipant.refresh_score()\\nmemory_list.add([participant,&#x27;participant&#x27;,[&#x27;public_key_hash&#x27;,&#x27;name&#x27;,&#x27;score&#x27;,&#x27;total_debit&#x27;,&#x27;profit&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.smart_contract_script.contest_refresh_ranking_script", "modulename": "common.smart_contract_script", "qualname": "contest_refresh_ranking_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;contest&#x27;]\\ncontest.get_ranking()\\n&quot;"}, {"fullname": "common.smart_contract_script.marketplace_archiving_script", "modulename": "common.smart_contract_script", "qualname": "marketplace_archiving_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;mp_request_step2_done&#x27;]\\nreturn [mp_request_step2_done.buyer_public_key_hash,mp_request_step2_done.seller_public_key_hash]\\n&quot;"}, {"fullname": "common.smart_contract_script.marketplace_expiration_script", "modulename": "common.smart_contract_script", "qualname": "marketplace_expiration_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\nmemory_obj_2_load=[&#x27;mp_request_step2_done&#x27;]\\nmp_request_step2_done.validate_expiration(604800,2592000,2592000)\\nmemory_list.add([mp_request_step2_done,mp_request_step2_done.mp_request_name,[&#x27;account&#x27;,&#x27;step&#x27;,&#x27;timestamp&#x27;,&#x27;requested_amount&#x27;,\\n  &#x27;requested_currency&#x27;,&#x27;requested_deposit&#x27;,&#x27;buyer_public_key_hash&#x27;,&#x27;timestamp_step1&#x27;,&#x27;timestamp_step2&#x27;,&#x27;timestamp_step3&#x27;,&#x27;timestamp_step4&#x27;,\\n  &#x27;buyer_public_key_hex&#x27;,&#x27;requested_nig&#x27;,&#x27;timestamp_nig&#x27;,&#x27;seller_public_key_hex&#x27;,&#x27;seller_public_key_hash&#x27;,&#x27;encrypted_account&#x27;,&#x27;buyer_reput_trans&#x27;,&#x27;buyer_reput_reliability&#x27;,\\n  &#x27;mp_request_signature&#x27;,&#x27;mp_request_id&#x27;,&#x27;previous_mp_request_name&#x27;,&#x27;mp_request_name&#x27;,&#x27;seller_safety_coef&#x27;,&#x27;smart_contract_ref&#x27;,&#x27;new_user_flag&#x27;,&#x27;reputation_buyer&#x27;,&#x27;reputation_seller&#x27;]])\\nmp_request_step2_done.get_requested_deposit()\\n&quot;"}, {"fullname": "common.smart_contract_script.application_version_script", "modulename": "common.smart_contract_script", "qualname": "application_version_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n###VERSION:1\\n###END\\nclass Application:\\n    def __init__(self):\\n        self.version=&quot;22&quot;\\n        self.url=&quot;https://drive.google.com/file/d/14e-xmqB-B59XACSRFNMsJa4yyJdyUG62/view?usp=drive_link&quot;\\n\\n    def get_version_data(self):\\n        return {&quot;version&quot;:self.version,&quot;url&quot;:self.url}\\n\\n        \\napplication=Application()\\nmemory_list.add([application,\\&#x27;application\\&#x27;,[\\&#x27;version\\&#x27;,\\&#x27;url\\&#x27;]])\\n123456\\n&#x27;"}, {"fullname": "common.smart_contract_script.reputation_code_raw", "modulename": "common.smart_contract_script", "qualname": "reputation_code_raw", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n###VERSION:1\\n###END\\nclass Reputation:\\n    def __init__(self):\\n        self.nb_transaction=0\\n        self.nb_pos=0\\n        self.nb_neg=0\\n\\n    def get_reputation(self):\\n        if self.nb_transaction==0:reliability=0\\n        else:reliability=max(0,round(((float(self.nb_pos)-float(self.nb_neg))/float(self.nb_transaction))*100,2))\\n        return [self.nb_transaction,reliability]\\nreputation=Reputation()\\nmemory_list.add([reputation,&#x27;reputation&#x27;,[&#x27;nb_transaction&#x27;,&#x27;nb_pos&#x27;,&#x27;nb_neg&#x27;]])\\n&quot;"}, {"fullname": "common.smart_contract_script.reputation_code_script", "modulename": "common.smart_contract_script", "qualname": "reputation_code_script", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;\\n###VERSION:1\\n###END\\nclass ReputationCode:\\n    def __init__(self):\\n        self.code=&#x27;&#x27;&#x27;\\n###VERSION:1\\n###END\\nclass Reputation:\\n    def __init__(self):\\n        self.nb_transaction=0\\n        self.nb_pos=0\\n        self.nb_neg=0\\n\\n    def get_reputation(self):\\n        if self.nb_transaction==0:reliability=0\\n        else:reliability=max(0,round(((float(self.nb_pos)-float(self.nb_neg))/float(self.nb_transaction))*100,2))\\n        return [self.nb_transaction,reliability]\\nreputation=Reputation()\\nmemory_list.add([reputation,&#x27;reputation&#x27;,[&#x27;nb_transaction&#x27;,&#x27;nb_pos&#x27;,&#x27;nb_neg&#x27;]])\\n&#x27;&#x27;&#x27;\\nreputation_code=ReputationCode()\\nmemory_list.add([reputation_code,&#x27;reputation_code&#x27;,[&#x27;code&#x27;]])\\n123456\\n&quot;"}, {"fullname": "common.transaction", "modulename": "common.transaction", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.transaction.Transaction", "modulename": "common.transaction", "qualname": "Transaction", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.transaction.Transaction.__init__", "modulename": "common.transaction", "qualname": "Transaction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\tinputs: [&lt;class &#x27;common.transaction_input.TransactionInput&#x27;&gt;],</span><span class=\"param\">\toutputs: [&lt;class &#x27;common.transaction_output.TransactionOutput&#x27;&gt;],</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.transaction.Transaction.inputs", "modulename": "common.transaction", "qualname": "Transaction.inputs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction.Transaction.outputs", "modulename": "common.transaction", "qualname": "Transaction.outputs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction.Transaction.transaction_hash", "modulename": "common.transaction", "qualname": "Transaction.transaction_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction.Transaction.get_transaction_hash", "modulename": "common.transaction", "qualname": "Transaction.get_transaction_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction.Transaction.sign_transaction_data", "modulename": "common.transaction", "qualname": "Transaction.sign_transaction_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">owner</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction.Transaction.sign", "modulename": "common.transaction", "qualname": "Transaction.sign", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">owner</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction.Transaction.transaction_data", "modulename": "common.transaction", "qualname": "Transaction.transaction_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "common.transaction_account", "modulename": "common.transaction_account", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount", "modulename": "common.transaction_account", "qualname": "TransactionAccount", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.__init__", "modulename": "common.transaction_account", "qualname": "TransactionAccount.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">iban</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">phone</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">country</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.transaction_account.TransactionAccount.name", "modulename": "common.transaction_account", "qualname": "TransactionAccount.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.iban", "modulename": "common.transaction_account", "qualname": "TransactionAccount.iban", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.bic", "modulename": "common.transaction_account", "qualname": "TransactionAccount.bic", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.email", "modulename": "common.transaction_account", "qualname": "TransactionAccount.email", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.phone", "modulename": "common.transaction_account", "qualname": "TransactionAccount.phone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.country", "modulename": "common.transaction_account", "qualname": "TransactionAccount.country", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.public_key_hash", "modulename": "common.transaction_account", "qualname": "TransactionAccount.public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.pin", "modulename": "common.transaction_account", "qualname": "TransactionAccount.pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_account.TransactionAccount.to_json", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.to_json_part1", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_json_part1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.to_json_part2", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_json_part2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.to_dict", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.to_dict_part1", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_dict_part1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.to_dict_part2", "modulename": "common.transaction_account", "qualname": "TransactionAccount.to_dict_part2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.TransactionAccount.encrypt", "modulename": "common.transaction_account", "qualname": "TransactionAccount.encrypt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">requester_public_key_hex</span>, </span><span class=\"param\"><span class=\"n\">sender_private_key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.decrypt_account", "modulename": "common.transaction_account", "qualname": "decrypt_account", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">account_encrypted_part1</span>, </span><span class=\"param\"><span class=\"n\">account_encrypted_part2</span>, </span><span class=\"param\"><span class=\"n\">private_key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_account.decrypt_pin", "modulename": "common.transaction_account", "qualname": "decrypt_pin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pin_encrypted</span>, </span><span class=\"param\"><span class=\"n\">private_key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_input", "modulename": "common.transaction_input", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput", "modulename": "common.transaction_input", "qualname": "TransactionInput", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.__init__", "modulename": "common.transaction_input", "qualname": "TransactionInput.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">transaction_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">unlocking_script</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">unlocking_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.transaction_input.TransactionInput.transaction_hash", "modulename": "common.transaction_input", "qualname": "TransactionInput.transaction_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.output_index", "modulename": "common.transaction_input", "qualname": "TransactionInput.output_index", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.unlocking_script", "modulename": "common.transaction_input", "qualname": "TransactionInput.unlocking_script", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.unlocking_public_key_hash", "modulename": "common.transaction_input", "qualname": "TransactionInput.unlocking_public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.network", "modulename": "common.transaction_input", "qualname": "TransactionInput.network", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_input.TransactionInput.to_json", "modulename": "common.transaction_input", "qualname": "TransactionInput.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">with_unlocking_script</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_input.TransactionInput.to_dict", "modulename": "common.transaction_input", "qualname": "TransactionInput.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">with_unlocking_script</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_output", "modulename": "common.transaction_output", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput", "modulename": "common.transaction_output", "qualname": "TransactionOutput", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.__init__", "modulename": "common.transaction_output", "qualname": "TransactionOutput.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">list_public_key_hash</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>, </span><span class=\"param\"><span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "common.transaction_output.TransactionOutput.amount", "modulename": "common.transaction_output", "qualname": "TransactionOutput.amount", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.account", "modulename": "common.transaction_output", "qualname": "TransactionOutput.account", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.network", "modulename": "common.transaction_output", "qualname": "TransactionOutput.network", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.interface_public_key_hash", "modulename": "common.transaction_output", "qualname": "TransactionOutput.interface_public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.node_public_key_hash", "modulename": "common.transaction_output", "qualname": "TransactionOutput.node_public_key_hash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.marketplace_transaction_flag", "modulename": "common.transaction_output", "qualname": "TransactionOutput.marketplace_transaction_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.smart_contract_transaction_flag", "modulename": "common.transaction_output", "qualname": "TransactionOutput.smart_contract_transaction_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.smart_contract_flag", "modulename": "common.transaction_output", "qualname": "TransactionOutput.smart_contract_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "common.transaction_output.TransactionOutput.to_json", "modulename": "common.transaction_output", "qualname": "TransactionOutput.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.transaction_output.TransactionOutput.to_dict", "modulename": "common.transaction_output", "qualname": "TransactionOutput.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.utils", "modulename": "common.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.utils.calculate_hash", "modulename": "common.utils", "qualname": "calculate_hash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">hash_function</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sha256&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.utils.normal_round", "modulename": "common.utils", "qualname": "normal_round", "kind": "function", "doc": "<p>Rounds a float to the specified number of decimal places.\nnum: the value to round\nndigits: the number of digits to round to</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num</span>, </span><span class=\"param\"><span class=\"n\">ndigits</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.convert_str_2_bool", "modulename": "common.utils", "qualname": "convert_str_2_bool", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">string</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.clean_request", "modulename": "common.utils", "qualname": "clean_request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.utils.dict_replace_value", "modulename": "common.utils", "qualname": "dict_replace_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.utils.list_replace_value", "modulename": "common.utils", "qualname": "list_replace_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_marketplace_raw", "modulename": "common.utils", "qualname": "check_marketplace_raw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span>, </span><span class=\"param\"><span class=\"n\">step</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.extract_marketplace_account", "modulename": "common.utils", "qualname": "extract_marketplace_account", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_marketplace_step1", "modulename": "common.utils", "qualname": "check_marketplace_step1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_marketplace_step", "modulename": "common.utils", "qualname": "check_marketplace_step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">step</span>, </span><span class=\"param\"><span class=\"n\">outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_marketplace_step2", "modulename": "common.utils", "qualname": "check_marketplace_step2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_smart_contract_consistency", "modulename": "common.utils", "qualname": "check_smart_contract_consistency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transaction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.retrieve_buyer_seller", "modulename": "common.utils", "qualname": "retrieve_buyer_seller", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_contest_refresh_score", "modulename": "common.utils", "qualname": "check_contest_refresh_score", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">transaction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.utils.check_marketplace_reputation_refresh", "modulename": "common.utils", "qualname": "check_marketplace_reputation_refresh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "common.values", "modulename": "common.values", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "common.values.NUMBER_OF_LEADING_ZEROS", "modulename": "common.values", "qualname": "NUMBER_OF_LEADING_ZEROS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "common.values.BLOCK_REWARD", "modulename": "common.values", "qualname": "BLOCK_REWARD", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "common.values.NETWORK_DEFAULT", "modulename": "common.values", "qualname": "NETWORK_DEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;nig&#x27;"}, {"fullname": "common.values.ROUND_VALUE_DIGIT", "modulename": "common.values", "qualname": "ROUND_VALUE_DIGIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "common.values.DEFAULT_TRANSACTION_FEE_PERCENTAGE", "modulename": "common.values", "qualname": "DEFAULT_TRANSACTION_FEE_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.1"}, {"fullname": "common.values.INTERFACE_TRANSACTION_FEE_SHARE", "modulename": "common.values", "qualname": "INTERFACE_TRANSACTION_FEE_SHARE", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "common.values.NODE_TRANSACTION_FEE_SHARE", "modulename": "common.values", "qualname": "NODE_TRANSACTION_FEE_SHARE", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "common.values.MINER_TRANSACTION_FEE_SHARE", "modulename": "common.values", "qualname": "MINER_TRANSACTION_FEE_SHARE", "kind": "variable", "doc": "<p></p>\n", "default_value": "50"}, {"fullname": "common.values.INTERFACE_BLOCK_REWARD_PERCENTAGE", "modulename": "common.values", "qualname": "INTERFACE_BLOCK_REWARD_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "common.values.NODE_BLOCK_REWARD_PERCENTAGE", "modulename": "common.values", "qualname": "NODE_BLOCK_REWARD_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "common.values.MINER_BLOCK_REWARD_PERCENTAGE", "modulename": "common.values", "qualname": "MINER_BLOCK_REWARD_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "50"}, {"fullname": "common.values.EUR_NIG_VALUE_START_TIMESTAMP", "modulename": "common.values", "qualname": "EUR_NIG_VALUE_START_TIMESTAMP", "kind": "variable", "doc": "<p></p>\n", "default_value": "1713657600"}, {"fullname": "common.values.EUR_NIG_VALUE_START_CONVERSION_RATE", "modulename": "common.values", "qualname": "EUR_NIG_VALUE_START_CONVERSION_RATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "common.values.EUR_NIG_VALUE_START_INCREASE_DAILY_PERCENTAGE", "modulename": "common.values", "qualname": "EUR_NIG_VALUE_START_INCREASE_DAILY_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "common.values.EUR_NIG_VALUE_START_INCREASE_HALVING_DAYS", "modulename": "common.values", "qualname": "EUR_NIG_VALUE_START_INCREASE_HALVING_DAYS", "kind": "variable", "doc": "<p></p>\n", "default_value": "360"}, {"fullname": "common.values.LEADER_NODE_SCHEDULE_NB_SLOT", "modulename": "common.values", "qualname": "LEADER_NODE_SCHEDULE_NB_SLOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "common.values.MARKETPLACE_SELLER_SAFETY_COEF", "modulename": "common.values", "qualname": "MARKETPLACE_SELLER_SAFETY_COEF", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "common.values.MARKETPLACE_BUYER_SAFETY_COEF", "modulename": "common.values", "qualname": "MARKETPLACE_BUYER_SAFETY_COEF", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "common.values.CONTEST_PUBLIC_KEY_HASH", "modulename": "common.values", "qualname": "CONTEST_PUBLIC_KEY_HASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;9ee93ba03f12c3a9e04b7982b5e4b657654aa74a&#x27;"}, {"fullname": "common.values.APPLICATION_VERSION_PUBLIC_KEY_HASH", "modulename": "common.values", "qualname": "APPLICATION_VERSION_PUBLIC_KEY_HASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0ee93ba03f12c3a9e04b7982b5e4b657654aa74a&#x27;"}, {"fullname": "common.values.MARKETPLACE_CODE_PUBLIC_KEY_HASH", "modulename": "common.values", "qualname": "MARKETPLACE_CODE_PUBLIC_KEY_HASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;41e69d07d38a4d7cca36df456ef099e8efb0512d&#x27;"}, {"fullname": "common.values.REPUTATION_CODE_PUBLIC_KEY_HASH", "modulename": "common.values", "qualname": "REPUTATION_CODE_PUBLIC_KEY_HASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;7c2043277fc30413cdfa5224d228c449ef2586c9&#x27;"}, {"fullname": "common.values.MARKETPLACE_STEP1_EXPIRATION", "modulename": "common.values", "qualname": "MARKETPLACE_STEP1_EXPIRATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "604800"}, {"fullname": "common.values.MARKETPLACE_STEP2_EXPIRATION", "modulename": "common.values", "qualname": "MARKETPLACE_STEP2_EXPIRATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "2592000"}, {"fullname": "common.values.MARKETPLACE_STEP3_EXPIRATION", "modulename": "common.values", "qualname": "MARKETPLACE_STEP3_EXPIRATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "2592000"}, {"fullname": "common.values.THRESHOLD0_TO_SALE_2_NEWUSER", "modulename": "common.values", "qualname": "THRESHOLD0_TO_SALE_2_NEWUSER", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "common.values.THRESHOLD1_TO_SALE_2_NEWUSER", "modulename": "common.values", "qualname": "THRESHOLD1_TO_SALE_2_NEWUSER", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "common.values.CHECK_SELLER_REPUTATION_FLAG_FOR_NEW_BUYER", "modulename": "common.values", "qualname": "CHECK_SELLER_REPUTATION_FLAG_FOR_NEW_BUYER", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "common.values.MY_NODE", "modulename": "common.values", "qualname": "MY_NODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;local_node3&#x27;"}, {"fullname": "common.values.MY_HOSTNAME", "modulename": "common.values", "qualname": "MY_HOSTNAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;127.0.0.3:5000&#x27;"}, {"fullname": "common.values.NODE_FILES_ROOT", "modulename": "common.values", "qualname": "NODE_FILES_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3&#x27;"}, {"fullname": "common.values.FIRST_KNOWN_NODE_HOSTNAME_LIST", "modulename": "common.values", "qualname": "FIRST_KNOWN_NODE_HOSTNAME_LIST", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;127.0.0.1:5000&#x27;, &#x27;127.0.0.2:5000&#x27;, &#x27;127.0.0.3:5000&#x27;]"}, {"fullname": "common.values.NODE_TO_AVOID_HOSTNAME1", "modulename": "common.values", "qualname": "NODE_TO_AVOID_HOSTNAME1", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;hostname&#x27;: &#x27;127.0.0.1:5000&#x27;}"}, {"fullname": "common.values.NODE_TO_AVOID_HOSTNAME3", "modulename": "common.values", "qualname": "NODE_TO_AVOID_HOSTNAME3", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;hostname&#x27;: &#x27;127.0.0.3:5000&#x27;}"}, {"fullname": "common.values.MEMPOOL_DIR", "modulename": "common.values", "qualname": "MEMPOOL_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3\\\\files\\\\MEMPOOL_DIR.txt&#x27;"}, {"fullname": "common.values.KNOWN_NODES_DIR", "modulename": "common.values", "qualname": "KNOWN_NODES_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3\\\\files\\\\KNOWN_NODES_DIR.txt&#x27;"}, {"fullname": "common.values.LEADER_NODE_SCHEDULE_DIR", "modulename": "common.values", "qualname": "LEADER_NODE_SCHEDULE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3\\\\files\\\\LEADER_NODE_SCHEDULE_DIR.txt&#x27;"}, {"fullname": "common.values.BLOCKCHAIN_DIR", "modulename": "common.values", "qualname": "BLOCKCHAIN_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3\\\\files\\\\BLOCKCHAIN_DIR.txt&#x27;"}, {"fullname": "common.values.STORAGE_DIR", "modulename": "common.values", "qualname": "STORAGE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\davidlio\\\\source\\\\nig\\\\node3\\\\STORAGE&#x27;"}, {"fullname": "common.values.MASTER_STATE_DIR", "modulename": "common.values", "qualname": "MASTER_STATE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\master_state&#x27;"}, {"fullname": "common.values.MASTER_STATE_DIR_TEMP", "modulename": "common.values", "qualname": "MASTER_STATE_DIR_TEMP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\master_state_temp&#x27;"}, {"fullname": "common.values.LEADER_NODE_TRANSACTIONS_ADVANCE", "modulename": "common.values", "qualname": "LEADER_NODE_TRANSACTIONS_ADVANCE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\leader_node_advance&#x27;"}, {"fullname": "common.values.MASTER_STATE_DEEPTH", "modulename": "common.values", "qualname": "MASTER_STATE_DEEPTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\blockchain&#x27;"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR_BACKLOG", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR_BACKLOG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\blockchain_backlog&#x27;"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR_SLASHED", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR_SLASHED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\\\blockchain_slashed&#x27;"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR_NB_SLOT_BEFORE_REVOTE", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR_NB_SLOT_BEFORE_REVOTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR_NB_SLOT_BEFORE_BLOCKCHAIN", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR_NB_SLOT_BEFORE_BLOCKCHAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DIR_SLASHED_NB_SLOT_BEFORE_ARCHIVE", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DIR_SLASHED_NB_SLOT_BEFORE_ARCHIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "common.values.NEW_BLOCKCHAIN_DEEPTH", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_DEEPTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "common.values.NEW_BLOCKCHAIN_SLASHED_DEEPTH", "modulename": "common.values", "qualname": "NEW_BLOCKCHAIN_SLASHED_DEEPTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "common.values.PoH_DURATION_SEC", "modulename": "common.values", "qualname": "PoH_DURATION_SEC", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();